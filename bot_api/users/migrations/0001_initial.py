# Generated by Django 5.1.3 on 2024-11-29 13:47

import uuid

from django.db import migrations, models

import users.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'password',
                    models.CharField(max_length=128, verbose_name='password'),
                ),
                (
                    'last_login',
                    models.DateTimeField(
                        blank=True, null=True, verbose_name='last login'
                    ),
                ),
                (
                    'first_name',
                    models.CharField(max_length=256, verbose_name='Имя'),
                ),
                (
                    'last_name',
                    models.CharField(max_length=256, verbose_name='Фамилия'),
                ),
                (
                    'telegram_id',
                    models.BigIntegerField(
                        blank=True,
                        null=True,
                        unique=True,
                        verbose_name='ID в Telegram',
                    ),
                ),
                (
                    'auth_token',
                    models.UUIDField(
                        default=uuid.uuid4,
                        unique=True,
                        verbose_name='Токен авторизации',
                    ),
                ),
                (
                    'username',
                    models.CharField(
                        max_length=256,
                        unique=True,
                        verbose_name='Имя пользователя',
                    ),
                ),
                (
                    'is_staff',
                    models.BooleanField(
                        default=False, verbose_name='Статус персонала'
                    ),
                ),
                (
                    'is_active',
                    models.BooleanField(default=True, verbose_name='Активный'),
                ),
                (
                    'is_superuser',
                    models.BooleanField(
                        default=False, verbose_name='Статус суперпользователя'
                    ),
                ),
                (
                    'groups',
                    models.ManyToManyField(
                        blank=True,
                        help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.',
                        related_name='user_set',
                        related_query_name='user',
                        to='auth.group',
                        verbose_name='groups',
                    ),
                ),
                (
                    'user_permissions',
                    models.ManyToManyField(
                        blank=True,
                        help_text='Specific permissions for this user.',
                        related_name='user_set',
                        related_query_name='user',
                        to='auth.permission',
                        verbose_name='user permissions',
                    ),
                ),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ('username',),
            },
            managers=[
                ('objects', users.managers.CustomUserManager()),
            ],
        ),
    ]
